# A Pulsator is a Black_Hole; it updates as a Black_Hole
#   does, but also by growing/shrinking depending on
#   whether or not it eats Prey (and removing itself from
#   the simulation if its dimension becomes 0), and displays
#   as a Black_Hole but with varying dimensions 


from blackhole import Black_Hole
from prey import Prey


class Pulsator(Black_Hole): 
    count=30
    def __init__(self,x,y):
        color='black'
        self._size=20
        self.eaten_size=0
        Black_Hole.__init__(self,x,y,color,self._size,self._size)
    
    def update(self,model):
        eaten=Black_Hole.update(self,model)
        if len(eaten) > self.eaten_size:
            Pulsator.count=30
            self.change_dimension(1,1)
        else:
            Pulsator.count-=1
            if Pulsator.count==0:
                self.change_demension(-1,-1)
                Pulsator.count=30
            if self.get_demension==(0,0):
                model.remove(self)
        return eaten
        
